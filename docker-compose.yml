version: "2.4"

networks:
  monitor-net:
    driver: bridge

volumes:
    prometheus_data: {}
    grafana_data: {}

services:
#  test:
#    image: nvidia/cuda:10.1-cudnn7-runtime-ubuntu16.04
#    command: "nvidia-smi"

  nvidia_gpu_prometheus_exporter:
    image: mindprince/nvidia_gpu_prometheus_exporter:0.1
    container_name: gpu_prometheus_exporter
    volumes:
      - /usr/local/cuda-10.0/include:/usr/local/cuda-10.0/include
    environment:
      - LD_LIBRARY_PATH=/usr/local/cuda-10.0/include
    expose:
      - 9445
    networks:
      - monitor-net
    #priveleged: true

  prometheus:
    image: prom/prometheus:v2.15.2
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    expose:
      - 9090
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  alertmanager:
    image: prom/alertmanager:v0.20.0
    container_name: alertmanager
    volumes:
      - ./alertmanager:/etc/alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    restart: unless-stopped
    expose:
      - 9093
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  nodeexporter:
    image: prom/node-exporter:v0.18.1
    container_name: nodeexporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    expose:
      - 9100
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  cadvisor:
    image: gcr.io/google-containers/cadvisor:v0.34.0
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      #- /cgroup:/cgroup:ro #doesn't work on MacOS only for Linux
      #- /dev/disk/:/dev/disk:ro
#      - /usr/local/cuda-10.0/include:/usr/local/cuda-10.0/include
#    environment:
#      - LD_LIBRARY_PATH=/usr/local/cuda-10.0/include
    restart: unless-stopped
    expose:
      - 8080
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"
#    runtime:
#      nvidia

  grafana:
    image: grafana/grafana:6.6.1
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    expose:
      - 3000
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  pushgateway:
    image: prom/pushgateway:v1.1.0
    container_name: pushgateway
    restart: unless-stopped
    expose:
      - 9091
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  caddy:
    image: stefanprodan/caddy
    container_name: caddy
    ports:
      - "3006:3006"
      - "9096:9096"
      - "9099:9099"
      - "9097:9097"
      - "8086:8086"
      - "15692:15692"
      - "9451:9451"
    volumes:
      - ./caddy:/etc/caddy
    environment:
      - ADMIN_USER=${ADMIN_USER:-admin}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
    restart: unless-stopped
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  rabbit:
    image: pivotalrabbitmq/rabbitmq-prometheus
    expose:
     - 5672
     - 15672
     - 15692
    networks:
      - monitor-net
  imageloader:
    build:
      context: ./func/
      dockerfile: imageloaderDockerfile
    volumes:
      - /mnt/nfs/user4/integration/func/vkusmart:/code/vkusmart
      - /mnt/nfs/vkusvill_records/31.10.2019_13.20.00_01.00.00/croped_demo:/videos
#    restart: always
    ipc: "host"
    depends_on:
     - rabbit
    networks:
      - monitor-net
    runtime:
      nvidia

  detector:
    build:
      context: ./func/
      dockerfile: detectorDockerfile
    volumes:
      - /mnt/nfs/user4/integration/func/vkusmart:/code/vkusmart
      - /mnt/nfs/weights/detectors:/mnt/nfs/weights/detectors
    ipc: "host"
    depends_on:
      - rabbit
    networks:
      - monitor-net
    runtime:
      nvidia
    restart: unless-stopped
#  reid:
#    build:
#      context: ./func/
#      dockerfile: reidDockerfile
#    ipc: "host"
#    depends_on:
#      - rabbit
#    networks:
#      - monitor-net
  time_logger:
    build:
      context: ./func/
      dockerfile: timeloggerDockerfile
    volumes:
      - /mnt/nfs/user4/test_gpu/func:/code
    depends_on:
      - rabbit
    networks:
      - monitor-net

  rabbitexp:
    image:
      kbudde/rabbitmq-exporter
    environment:
      - RABBIT_URL=http://rabbit:15672
    expose:
      - 9419 
    depends_on:
      - rabbit
    networks:
      - monitor-net
